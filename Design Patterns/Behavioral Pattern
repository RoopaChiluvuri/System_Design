Observer Pattern 
- The Observer Pattern is a behavioral design pattern that defines a one-to-many dependency between objects.
When one object (called the subject) changes its state, it automatically notifies all its dependents (called the observers), 
allowing them to update themselves.

Command Pattern
- The Command Pattern is a behavioral design pattern that turns a request into an object.
This object contains all the information needed to perform the request, including the method to call, the arguments,
and the receiver (the object that performs the action).

Itâ€™s commonly used to:
  - Encapsulate requests as objects.
  - Decouple the sender (who requests the action) from the receiver (who performs the action).
  - Support features like undo/redo, queuing, or logging requests.

